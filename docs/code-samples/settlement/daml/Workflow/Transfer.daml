module Workflow.Transfer where

import DA.Set (Set, union)
import Daml.Finance.Interface.Holding.Transferable qualified as Transferable (Transfer(..), I)
import Daml.Finance.Interface.Types.Common.Types (AccountKey(..))

-- | This propose/accept template is designed for the stepwise collection of necessary
-- authorizations for transferring a holding to a new owner.
-- TRANSFER_REQUEST_BEGIN
template Request
  with
    requestor : Party
      -- ^ The requestor.
    receiverAccount : AccountKey
      -- ^ The account to which the holding is sent.
    transferableCid : ContractId Transferable.I
      -- ^ The holding instance to be sent.
    accepted : Set Party
      -- ^ Current set of parties that accept the transfer.
    observers : Set Party
      -- ^ Observers.
  where
    signatory requestor, accepted
    observer observers

    choice Accept : ContractId Request
      with
        actors : Set Party
      controller actors
      do
        create this with accepted = actors `union` this.accepted

    choice Effectuate : ContractId Transferable.I
      with
        actors : Set Party
      controller actors
      do
        exercise transferableCid Transferable.Transfer with
          actors = actors `union` this.accepted
          newOwnerAccount = receiverAccount
-- TRANSFER_REQUEST_END
