-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Settlement.Test.Hierarchy where

import DA.Assert ((===))
import Daml.Finance.Settlement.Hierarchy
import Daml.Finance.Test.Util.Common (createParties)
import Daml.Script

-- Test path-finding within a hierarchy.
--
-- Used hierarchy:
--
--           a
--         /   \
--        b     c
--      /   \    \
--     d    e     f
testHierarchyPaths : Script ()
testHierarchyPaths = do

  [a, b, c, d, e, f, h] <- createParties ["a", "b", "c", "d", "e", "f", "h"]

  let hierarchy = Hierarchy with
        rootCustodian = a
        pathsToRootCustodian =
          [ [d, b]
          , [e, b]
          , [f, c]
          ]

  locateParty a hierarchy === Some [a, a]
  locateParty b hierarchy === Some [b, a]
  locateParty c hierarchy === Some [c, a]
  locateParty d hierarchy === Some [d, b, a]
  locateParty e hierarchy === Some [e, b, a]
  locateParty f hierarchy === Some [f, c, a]
  locateParty h hierarchy === None

  route hierarchy d a === Some [(d, b, b), (b, a, a)]
  route hierarchy d b === Some [(d, b, b)]
  route hierarchy b f === Some [(b, c, a), (c, f, c)]
  route hierarchy a d === Some [(a, b, a), (b, d, b)]
  route hierarchy d h === None

  pure ()

-- | Get route between two parties, if it exists.
route : Hierarchy -> Party -> Party -> Optional [(Party, Party, Party)]
route h from to = do
  fromPath <- locateParty from h
  toPath <- locateParty to h
  getRoute fromPath toPath
