-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Util.Test.Date.Calendar where

import DA.Assert ((===))
import DA.Date (DayOfWeek(..), Month(..), date)
import Daml.Finance.Interface.Types.Date.Calendar (BusinessDayConventionEnum(..), HolidayCalendarData(..))
import Daml.Finance.Util.Date.Calendar (addBusinessDays, adjustDate, isBusinessDay, isHoliday, nextBusinessDay, nextOrSameBusinessDay, nextSameOrLastInMonthBusinessDay, previousBusinessDay, previousOrSameBusinessDay)
import Daml.Script

cal : HolidayCalendarData
cal = HolidayCalendarData with
  id = "USNY"
  weekend = [Saturday, Sunday]
  holidays = [date 2018 Jan 02, date 2018 Jan 31, date 2018 Feb 1]

test_isHoliday : Script ()
test_isHoliday = script do
  isHoliday cal (date 2018 Jan 02) === True

test_isBusinessDay : Script ()
test_isBusinessDay = script do
  isBusinessDay cal (date 2018 Jan 02) === False

test_nextBusinessDay : Script ()
test_nextBusinessDay = script do
  nextBusinessDay cal (date 2018 Jan 01) === date 2018 Jan 03

test_previousBusinessDay : Script ()
test_previousBusinessDay = script do
  previousBusinessDay cal (date 2018 Jan 03) === date 2018 Jan 01

test_nextOrSameBusinessDay : Script ()
test_nextOrSameBusinessDay = script do
  nextOrSameBusinessDay cal (date 2018 Jan 01) === date 2018 Jan 01

test_previousOrSameBusinessDay : Script ()
test_previousOrSameBusinessDay = script do
  previousOrSameBusinessDay cal (date 2018 Jan 03) === date 2018 Jan 03

test_nextSameOrLastInMonthBusinessDay : Script ()
test_nextSameOrLastInMonthBusinessDay = script do
  nextSameOrLastInMonthBusinessDay cal (date 2018 Jan 31) === date 2018 Jan 30

test_addBusinessDays : Script ()
test_addBusinessDays = script do
  addBusinessDays cal 5 (date 2018 Jan 01) === date 2018 Jan 09
  addBusinessDays cal (-5) (date 2018 Feb 05) === date 2018 Jan 25

test_adjustDate : Script ()
test_adjustDate = script do
  adjustDate cal NoAdjustment (date 2018 Mar 31) === (date 2018 Mar 31)
  adjustDate cal Following (date 2018 Mar 31) === (date 2018 Apr 02)
  adjustDate cal ModifiedFollowing (date 2018 Mar 31) === (date 2018 Mar 30)
  adjustDate cal Preceding (date 2018 Apr 01) === (date 2018 Mar 30)
  adjustDate cal ModifiedPreceding (date 2018 Apr 01) === (date 2018 Apr 02)
