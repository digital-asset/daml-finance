-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Util.Test.Common where

import DA.Assert ((===))
import DA.List(group, groupBy, groupOn, sort)
import Daml.Finance.Util.Common (sortAndGroupOn)
import Daml.Script

testSortAndGroupOn : Script ()
testSortAndGroupOn = script do
  let
    listToGroup = [1, 2, 3, 3, 2, 1];
    groupedConsequtive = [[1], [2], [3, 3], [2], [1]]
    groupedAll = [[1, 1], [2, 2], [3, 3]]

  group listToGroup === groupedConsequtive
  group (sort listToGroup) === groupedAll

  groupBy (\a b -> a == b) listToGroup === groupedConsequtive
  groupBy (\a b -> a == b) (sort listToGroup) === groupedAll

  groupOn identity listToGroup === groupedConsequtive
  groupOn identity (sort listToGroup) === groupedAll

  sortAndGroupOn identity listToGroup === groupedAll

  pure ()
