-- Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Account.Test.Account where

import Daml.Finance.Holding.Factory qualified as Holding (Factory(..))
import Daml.Finance.Interface.Account.Account qualified as Account (I, Remove(..))
import Daml.Finance.Interface.Types.Common.Types (Id(..))
import Daml.Finance.Test.Util.Account qualified as Account (ControlledBy(..), createAccount, createFactory, submitExerciseInterfaceByKeyCmd)
import Daml.Finance.Test.Util.Common (createParties)
import Daml.Finance.Test.Util.HoldingFactory (createHoldingFactory)
import Daml.Script

-- | Test the creation and removal of an account.
test : Script ()
test = do
  -- Create parties
  [custodian, investor] <- createParties ["Custodian", "Investor"]

  -- Create account factory
  accountFactoryCid <- toInterfaceContractId <$> Account.createFactory custodian []

  -- Create holding factory
  holdingFactory <- createHoldingFactory
    Holding.Factory with provider = custodian; id = Id "Holding Factory"; observers = mempty

  -- Create account
  investorAccount <- Account.createAccount "Default Account" [] accountFactoryCid holdingFactory []
    Account.Owner custodian investor

  -- Remove account
  Account.submitExerciseInterfaceByKeyCmd @Account.I [custodian, investor] [] investorAccount
    Account.Remove

  pure ()
