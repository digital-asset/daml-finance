-- Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Test.Util.Holding where

import DA.Assert ((===))
import Daml.Finance.Interface.Holding.Holding qualified as Holding (GetView(..), I)
import Daml.Finance.Interface.Util.Disclosure qualified as Disclosure (GetView(..), I)
import Daml.Script

-- | Verify that a party is the owner of a holding.
verifyOwnerOfHolding : (HasToInterface a Holding.I, HasToInterface a Disclosure.I) =>
  [(Party, ContractId a)] -> Script [()]
verifyOwnerOfHolding l = forA l
  \(owner, holdingCid) -> do
    v <- submit owner do
      exerciseCmd (toInterfaceContractId @Holding.I holdingCid) Holding.GetView with viewer = owner
    v.account.owner === owner

-- | Verify that a party is the owner of a holding and that the holding has the expected amount.
verifyOwnerAndAmountOfHolding : (HasToInterface a Holding.I, HasToInterface a Disclosure.I) =>
  [(Party, Decimal, ContractId a)] -> Script [()]
verifyOwnerAndAmountOfHolding l = forA l
  \(owner, amount, holdingCid) -> do
    v <- submit owner do
      exerciseCmd (toInterfaceContractId @Holding.I holdingCid) Holding.GetView with viewer = owner
    v.account.owner === owner
    v.amount === amount

-- | Verify that a holding has no observers.
verifyNoObservers : (HasToInterface a Disclosure.I) => [(Party, ContractId a)] -> Script [()]
verifyNoObservers l = forA l
  \(owner, holdingCid) -> do
    v <- submit owner do
      exerciseCmd (toInterfaceContractId @Disclosure.I holdingCid)
        Disclosure.GetView with viewer = owner
    v.observers === mempty
