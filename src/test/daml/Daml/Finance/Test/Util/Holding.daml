-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Test.Util.Holding where

import DA.Assert ((===))
import DA.Map (empty)
import Daml.Finance.Interface.Holding.Base qualified as Base (I, GetView(..))
import Daml.Finance.Interface.Util.Disclosure qualified as Disclosure (I, GetView(..))
import Daml.Script

-- | Verify that a party is the owner of a holding.
verifyOwnerOfHolding : forall a.
  (HasToInterface a Base.I, HasToInterface a Disclosure.I) => [(Party, ContractId a)] -> Script [()]
verifyOwnerOfHolding l = forA l
  \(owner, holdingCid) -> do
    v <- submit owner do
      exerciseCmd (toInterfaceContractId @Base.I holdingCid) Base.GetView with viewer = owner
    v.account.owner === owner

-- | Verify that a holding has no observers.
verifyNoObservers : forall a.
  (HasToInterface a Disclosure.I) => [(Party, ContractId a)] -> Script [()]
verifyNoObservers l = forA l
  \(owner, holdingCid) -> do
    v <- submit owner do exerciseCmd (toInterfaceContractId @Disclosure.I holdingCid) Disclosure.GetView with viewer = owner
    v.observers === empty
