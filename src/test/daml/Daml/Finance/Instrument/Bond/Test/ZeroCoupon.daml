-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Instrument.Bond.Test.ZeroCoupon where

import DA.Date
import DA.Set (singleton)
import Daml.Finance.Instrument.Bond.Test.Util
import Daml.Finance.Interface.Util.Common (qty)
import Daml.Finance.Test.Util.Common (createParties)
import Daml.Finance.Test.Util.Instrument (lifecycleAndVerifyPaymentEffects, originate, verifyNoLifecycleEffects)
import Daml.Script

-- Test creation and lifecycling of a zero coupon bond
run : Script ()
run = script do
  [depository, custodian, issuer, publicParty] <-
    createParties ["CSD", "Custodian", "Issuer", "PublicParty"]

  -- Distribute commercial-bank cash
  now <- getTime
  let pp = [("PublicParty", singleton publicParty)]
  cashInstrumentCid <- originate depository issuer "USD" "United States Dollar" pp now

  -- Create and distribute bond
  -- Zero coupon bond example
  -- CREATE_ZERO_COUPON_BOND_VARIABLES_BEGIN
  let
    issueDate = date 2019 Jan 16
    maturityDate = date 2020 May 15
    notional = 1000.0
  -- CREATE_ZERO_COUPON_BOND_VARIABLES_END

  bondInstrument <- originateZeroCouponBond custodian issuer "BONDTEST1" "Zero Coupon Bond" pp now
    issueDate maturityDate cashInstrumentCid notional

  -- One day before expiry: try to lifecycle and verify that there are no lifecycle effects.
  verifyNoLifecycleEffects [publicParty] (subtractDays maturityDate 1) bondInstrument issuer []

  -- Lifecycle on the expiry date. Verify the lifecycle effect for the redemption amount
  let
    expectedConsumedQuantities = []
    expectedProducedQuantities = [qty 1000.0 cashInstrumentCid]
  None <- lifecycleAndVerifyPaymentEffects [publicParty] maturityDate
    bondInstrument issuer [] expectedConsumedQuantities expectedProducedQuantities

  pure ()
