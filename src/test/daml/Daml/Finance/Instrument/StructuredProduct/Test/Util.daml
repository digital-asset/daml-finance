-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Instrument.StructuredProduct.Test.Util where

import DA.Map qualified as M (fromList)
import Daml.Finance.Instrument.StructuredProduct.BarrierReverseConvertible.Instrument qualified as BarrierReverseConvertible (Instrument(..))
import Daml.Finance.Interface.Types.Common.Types (Id(..), InstrumentKey, Parties)
import Daml.Finance.Test.Util.Instrument (createReference)
import Daml.Script

-- | Originate a cash-settled European option.
originateBarrierReverseConvertible : Party -> Party -> Text -> Text -> [(Text, Parties)] -> Time ->
  Date -> Decimal -> Decimal -> Date -> InstrumentKey -> Text
  -> Script InstrumentKey
originateBarrierReverseConvertible depository issuer label description observers lastEventTimestamp
  expiryDate strike barrier barrierStartDate currency referenceAssetId = do
  -- CREATE_BARRIER_EUROPEAN_OPTION_INSTRUMENT_BEGIN
    cid <- toInterfaceContractId <$> submitMulti [depository, issuer] [] do
      createCmd BarrierReverseConvertible.Instrument with
        depository; issuer; id = Id label; version = "0"; description
        observers = M.fromList observers; lastEventTimestamp
        strike; barrier; barrierStartDate; expiryDate
        referenceAssetId; currency
  -- CREATE_BARRIER_EUROPEAN_OPTION_INSTRUMENT_END
    createReference cid depository issuer observers
