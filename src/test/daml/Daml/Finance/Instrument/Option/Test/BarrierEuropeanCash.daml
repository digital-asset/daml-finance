-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Instrument.Option.Test.BarrierEuropeanCash where

import DA.Date (Month(..), date, subtractDays)
import DA.Map qualified as M (empty, fromList)
import DA.Set (singleton)
import Daml.Finance.Data.Numeric.Observation (Observation(..))
import Daml.Finance.Instrument.Option.Test.Util (originateBarrierEuropeanCashOption)
import Daml.Finance.Interface.Instrument.Option.Types (BarrierTypeEnum(..), OptionTypeEnum(..))
import Daml.Finance.Interface.Types.Common.Types (Id(..))
import Daml.Finance.Interface.Util.Common (qty)
import Daml.Finance.Test.Util.Common (createParties)
import Daml.Finance.Test.Util.Instrument (originate)
import Daml.Finance.Test.Util.Lifecycle (lifecycleAndVerifyPaymentEffects, verifyNoLifecycleEffects)
import Daml.Finance.Test.Util.Time (dateToDateClockTime)
import Daml.Script

-- Define and lifecycle barrier call/put options, which are automatically exercised and cash
-- settled.
run : Script ()
run = script do
  [custodian, issuer, calendarDataProvider, publicParty] <-
    createParties ["Custodian", "Issuer", "Calendar Data Provider", "PublicParty"]

  -- Distribute commercial-bank cash
  now <- getTime
  let observers = [("PublicParty", singleton publicParty)]
  cashInstrument <- originate custodian issuer "USD" "US Dollars" observers now

  -- Create and distribute option
  let
    strikeLow = 40.0
    -- CREATE_BARRIER_EUROPEAN_OPTION_VARIABLES_BEGIN
    barrier = 30.0
    barrierLow : Decimal = 20.0
    barrierType = DownAndOut
    barrierStartDate = date 2019 Jan 20
    --strike = 50.0
    expiryDate = date 2019 May 15
    referenceAssetId = "AAPL-CLOSE"
    -- CREATE_BARRIER_EUROPEAN_OPTION_VARIABLES_END
    longOption = True
    shortOption = False

  -- CREATE_BARRIER_EUROPEAN_OPTION_OBSERVATIONS_BEGIN
  let
    observations = M.fromList
      [ (dateToDateClockTime $ date 2019 May 13, 28.78)
      , (dateToDateClockTime $ date 2019 May 14, 42.00)
      , (dateToDateClockTime $ date 2019 May 15, 48.78)
      , (dateToDateClockTime $ date 2019 May 16, 18.78)
      , (dateToDateClockTime $ date 2019 May 17, 48.78)
      ]
  observableCid <- toInterfaceContractId <$> submit issuer do
    createCmd Observation with
      provider = issuer; id = Id referenceAssetId; observations; observers = M.empty
  -- CREATE_BARRIER_EUROPEAN_OPTION_OBSERVATIONS_END

  -- Issue instruments
  itmDownAndOutLongCallInstrument <- originateBarrierEuropeanCashOption issuer issuer "Long ITM Call" "Option"
    observers now expiryDate Call strikeLow barrier DownAndOut barrierStartDate cashInstrument referenceAssetId longOption

{-
  itmShortCallInstrument <- originateBarrierEuropeanCashOption issuer issuer "Short ITM Call" "Option"
    observers now expiryDate Call strikeLow barrier barrierType cashInstrument referenceAssetId shortOption
  otmLongCallInstrument <- originateBarrierEuropeanCashOption issuer issuer "Long OTM Call" "Option"
    observers now expiryDate Call strike barrier barrierType cashInstrument referenceAssetId longOption
  otmShortCallInstrument <- originateBarrierEuropeanCashOption issuer issuer "Short OTM Call" "Option"
    observers now expiryDate Call strike barrier barrierType cashInstrument referenceAssetId shortOption
  itmLongPutInstrument <- originateBarrierEuropeanCashOption issuer issuer "Long ITM Put" "Option"
    observers now expiryDate Put strike barrier barrierType cashInstrument referenceAssetId longOption
  itmShortPutInstrument <- originateBarrierEuropeanCashOption issuer issuer "Short ITM Put" "Option"
    observers now expiryDate Put strike barrier barrierType cashInstrument referenceAssetId shortOption
  otmLongPutInstrument <- originateBarrierEuropeanCashOption issuer issuer "Long OTM Put" "Option"
    observers now expiryDate Put strikeLow barrier barrierType cashInstrument referenceAssetId longOption
  otmShortPutInstrument <- originateBarrierEuropeanCashOption issuer issuer "Short OTM Put" "Option"
    observers now expiryDate Put strikeLow barrier barrierType cashInstrument referenceAssetId shortOption

 -}

  -- Barrier hit
  let
    expectedConsumed = []
    expectedProduced = []
  Some optionInstrumentAfterBarrierHit <- lifecycleAndVerifyPaymentEffects [publicParty] (date 2019 May 13)
    itmDownAndOutLongCallInstrument issuer [observableCid] expectedConsumed expectedProduced

  verifyNoLifecycleEffects [publicParty] (date 2019 May 14)
    optionInstrumentAfterBarrierHit issuer [observableCid]

  -- Long call: Lifecycle and verify the lifecycle effects for an in-the-money option.
{-   let
    expectedConsumed = []
    expectedProduced = [qty 8.78 cashInstrument]
  optionInstrumentAfterFirstPayment <- lifecycleAndVerifyPaymentEffects [publicParty] (date 2019 May 15)
    optionInstrumentAfterBarrierHit issuer [observableCid] expectedConsumed expectedProduced -}

{-
  verifyNoLifecycleEffects [publicParty] (date 2019 May 15)
    optionInstrumentAfterBarrierHit issuer [observableCid]
 -}
  let
    expectedConsumed = []
    expectedProduced = []
  lifecycleAndVerifyPaymentEffects [publicParty] (date 2019 May 15)
    optionInstrumentAfterBarrierHit issuer [observableCid] expectedConsumed expectedProduced


  -- Issue instruments
  itmDownAndInLongCallInstrument <- originateBarrierEuropeanCashOption issuer issuer "DownAndIn" "Option"
    observers now expiryDate Call strikeLow barrier DownAndIn barrierStartDate cashInstrument referenceAssetId longOption

  -- Barrier hit
  let
    expectedConsumed = []
    expectedProduced = []
  Some optionInstrumentAfterBarrierHit <- lifecycleAndVerifyPaymentEffects [publicParty] (date 2019 May 13)
    itmDownAndInLongCallInstrument issuer [observableCid] expectedConsumed expectedProduced

  verifyNoLifecycleEffects [publicParty] (date 2019 May 14)
    optionInstrumentAfterBarrierHit issuer [observableCid]

  -- Long call: Lifecycle and verify the lifecycle effects for an in-the-money option.
  let
    expectedConsumed = []
    expectedProduced = [qty 8.78 cashInstrument]
  optionInstrumentAfterFirstPayment <- lifecycleAndVerifyPaymentEffects [publicParty] (date 2019 May 15)
    optionInstrumentAfterBarrierHit issuer [observableCid] expectedConsumed expectedProduced


  -- Issue instruments
  itmDownAndInLowBarrierLongCallInstrument <- originateBarrierEuropeanCashOption issuer issuer "DownAndInLow" "Option"
    observers now expiryDate Call strikeLow barrierLow DownAndIn barrierStartDate cashInstrument referenceAssetId longOption

  verifyNoLifecycleEffects [publicParty] (date 2019 May 14)
    itmDownAndInLowBarrierLongCallInstrument issuer [observableCid]

  verifyNoLifecycleEffects [publicParty] (date 2019 May 14)
    itmDownAndInLowBarrierLongCallInstrument issuer [observableCid]

  verifyNoLifecycleEffects [publicParty] (date 2019 May 15)
    itmDownAndInLowBarrierLongCallInstrument issuer [observableCid]

  -- Long call: Lifecycle and verify the lifecycle effects for an in-the-money option.
  let
    expectedConsumed = []
    expectedProduced = []
  Some optionInstrumentAfterBarrierHit <- lifecycleAndVerifyPaymentEffects [publicParty] (date 2019 May 16)
    itmDownAndInLowBarrierLongCallInstrument issuer [observableCid] expectedConsumed expectedProduced


  verifyNoLifecycleEffects [publicParty] (date 2019 May 17)
    optionInstrumentAfterBarrierHit issuer [observableCid]



{-
  let
    expectedConsumed = []
    expectedProduced = [qty 8.78 cashInstrument]
  optionInstrumentAfterFirstPayment <- lifecycleAndVerifyPaymentEffects [publicParty] (date 2019 May 17)
    optionInstrumentAfterBarrierHit issuer [observableCid] expectedConsumed expectedProduced
 -}

{-
  -- Short call: Lifecycle and verify the lifecycle effects for an in-the-money option.
  let
    expectedConsumed = [qty 8.78 cashInstrument]
    expectedProduced = []
  optionInstrumentAfterFirstPayment <- lifecycleAndVerifyPaymentEffects [publicParty] expiryDate
    itmShortCallInstrument issuer [observableCid] expectedConsumed expectedProduced

  -- Long call: Lifecycle and verify the lifecycle effects for an out-of-the-money option.
  let
    expectedConsumed = []
    expectedProduced = []
  optionInstrumentAfterFirstPayment <- lifecycleAndVerifyPaymentEffects [publicParty] expiryDate
    otmLongCallInstrument issuer [observableCid] expectedConsumed expectedProduced

  -- Short call: Lifecycle and verify the lifecycle effects for an out-of-the-money option.
  let
    expectedConsumed = []
    expectedProduced = []
  optionInstrumentAfterFirstPayment <- lifecycleAndVerifyPaymentEffects [publicParty] expiryDate
    otmShortCallInstrument issuer [observableCid] expectedConsumed expectedProduced

  -- Long put: Lifecycle and verify the lifecycle effects for an in-the-money option.
  let
    expectedConsumed = []
    expectedProduced = [qty 1.22 cashInstrument]
  optionInstrumentAfterFirstPayment <- lifecycleAndVerifyPaymentEffects [publicParty] expiryDate
    itmLongPutInstrument issuer [observableCid] expectedConsumed expectedProduced

  -- Short put: Lifecycle and verify the lifecycle effects for an in-the-money option.
  let
    expectedConsumed = [qty 1.22 cashInstrument]
    expectedProduced = []
  optionInstrumentAfterFirstPayment <- lifecycleAndVerifyPaymentEffects [publicParty] expiryDate
    itmShortPutInstrument issuer [observableCid] expectedConsumed expectedProduced

  -- Long put: Lifecycle and verify the lifecycle effects for an out-of-the-money option.
  let
    expectedConsumed = []
    expectedProduced = []
  optionInstrumentAfterFirstPayment <- lifecycleAndVerifyPaymentEffects [publicParty] expiryDate
    otmLongPutInstrument issuer [observableCid] expectedConsumed expectedProduced

  -- Short put: Lifecycle and verify the lifecycle effects for an out-of-the-money option.
  let
    expectedConsumed = []
    expectedProduced = []
  optionInstrumentAfterFirstPayment <- lifecycleAndVerifyPaymentEffects [publicParty] expiryDate
    otmShortPutInstrument issuer [observableCid] expectedConsumed expectedProduced
 -}
  pure ()
