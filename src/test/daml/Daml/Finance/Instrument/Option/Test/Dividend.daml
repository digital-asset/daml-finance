-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Instrument.Option.Test.Dividend where

import DA.Date
import DA.Set (singleton)
import Daml.Finance.Instrument.Option.Test.Util
import Daml.Finance.Interface.Instrument.Option.Types (OptionTypeEnum(..))
import Daml.Finance.Interface.Util.Common (qty)
import Daml.Finance.Test.Util.Common (createParties)
import Daml.Finance.Test.Util.Instrument (originate)
import Daml.Script

-- Define and lifecycle dividend options, which are manually exercised and physically settled.
run : Script ()
run = script do
  [custodian, issuer, calendarDataProvider, publicParty] <-
    createParties ["Custodian", "Issuer", "Calendar Data Provider", "PublicParty"]

  -- Distribute commercial-bank cash
  now <- getTime
  let observers = [("PublicParty", singleton publicParty)]
  cashInstrumentCid <- originate custodian issuer "USD" "US Dollars" observers now
  aaplInstrumentCid <- originate custodian issuer "AAPL" "AAPL stock" observers now

  -- Create and distribute option
  let
    -- CREATE_EUROPEAN_PHYSICAL_OPTION_VARIABLES_BEGIN
    strikeLow = 40.0
    expiryDate = date 2019 May 15
    -- CREATE_EUROPEAN_PHYSICAL_OPTION_VARIABLES_END
    longOption = True
    shortOption = False

  -- Issue instrument
  divOptionInstrument <- originateDividendOption custodian issuer "Cash or Stock"
    "Option" observers now expiryDate Call strikeLow cashInstrumentCid aaplInstrumentCid longOption

  let amount = 1.0

  -- Elect shares: Lifecycle and verify the lifecycle effects of a dividend option.
  let
    expectedConsumed = []
    expectedProduced = [qty 0.03 aaplInstrumentCid]
  optionInstrumentAfterFirstPayment <- electAndVerifyDivOptionPaymentEffects [publicParty] expiryDate amount
    divOptionInstrument issuer custodian "SHARES" expectedConsumed expectedProduced

  -- Elect cash: Lifecycle and verify the lifecycle effects of a dividend option.
  let
    expectedConsumed = []
    expectedProduced = [qty 0.02 cashInstrumentCid]
  optionInstrumentAfterFirstPayment <- electAndVerifyDivOptionPaymentEffects [publicParty] expiryDate amount
    divOptionInstrument issuer custodian "CASH" expectedConsumed expectedProduced

  pure ()
