-- Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Instrument.Equity.Test.Util where

import DA.Map  (fromList)
import Daml.Finance.Instrument.Equity.Factory (Factory(..))
import Daml.Finance.Interface.Instrument.Equity.Factory qualified as EquityFactory (Create(..), I)
import Daml.Finance.Interface.Types.Common.Types (HoldingStandard(..), Id(..), InstrumentKey(..), Parties)
import Daml.Script

-- | Originate an `Equity` Instrument.
originateEquity : Party -> Party -> Text -> Text -> HoldingStandard -> Text -> [(Text, Parties)] ->
  Time -> Script InstrumentKey
originateEquity depository issuer label version holdingStandard description observers
  timestamp = do
    equityFactoryCid <- toInterfaceContractId @EquityFactory.I <$> submit issuer do
      createCmd Factory with provider = issuer; observers = mempty
    let
      instrument = InstrumentKey with depository; issuer; version; id = Id label; holdingStandard
    submitMulti [depository, issuer] [] do
      exerciseCmd equityFactoryCid EquityFactory.Create with
        instrument; description
        observers = fromList observers
        validAsOf = timestamp
    submitMulti [depository, issuer] [] do archiveCmd equityFactoryCid
    pure instrument
