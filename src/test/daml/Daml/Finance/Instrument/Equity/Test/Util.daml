-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Instrument.Equity.Test.Util where

import DA.Map qualified as M (empty)
import Daml.Finance.Instrument.Equity.Factory (Factory(..))
import Daml.Finance.Interface.Instrument.Equity.Factory qualified as Equity (F, Create(..))
import Daml.Finance.Interface.Types.Common.Types (Id(..), InstrumentKey(..), Parties)
import Daml.Script

-- | Originate an `Equity` Instrument.
originateEquity : Party -> Party -> Text -> Text -> Text -> [(Text, Parties)] -> Time ->
  Script InstrumentKey
originateEquity depository issuer label version description observers timestamp = do
  factoryCid <- toInterfaceContractId @Equity.F <$> submit issuer do
    createCmd Factory with provider = issuer, observers = M.empty
  let
    instrument = InstrumentKey with
      depository; issuer; version
      id = Id label
  submitMulti [depository, issuer] [] do
    exerciseCmd factoryCid Equity.Create with
      instrument; description
      observers = M.empty
      validAsOf = timestamp
  submitMulti [depository, issuer] [] do archiveCmd factoryCid
  pure instrument