-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Data.Test.HolidayCalendar where

import DA.Date
import DA.Map qualified as M (empty, fromList)
import DA.Set (singleton)
import Daml.Finance.Data.Reference.HolidayCalendar
import Daml.Finance.Interface.Data.Reference.HolidayCalendar (GetView(..), UpdateCalendar(..))
import Daml.Finance.Interface.Data.Reference.HolidayCalendar.Factory qualified as Factory (Create(..), F, Remove(..))
import Daml.Finance.Interface.Types.Date.Calendar
import Daml.Finance.Test.Util.Common (createParties)
import Daml.Script

-- | Test holiday calendars by a reference data provider.
testHolidayCalendar : Script ()
testHolidayCalendar = script do
  [reuters, publicParty] <- createParties ["Reuters", "PublicParty"]

  let
    cal = HolidayCalendarData with
      id = "USNY"
      weekend = [Saturday, Sunday]
      holidays = [date 2018 Jan 02, date 2018 Jan 31, date 2018 Feb 1]
    observers = [("PublicParty", singleton publicParty)]

  -- Reuters defines the USNY holiday calendar
  -- Create calendar via factory
  calendarFactoryCid <- toInterfaceContractId @Factory.F <$> submit reuters do
    createCmd Factory with provider = reuters; observers = M.empty

  usnyCalendarCid <- submit reuters do
    exerciseCmd calendarFactoryCid Factory.Create with
      provider = reuters
      calendar = cal
      observers = M.fromList observers

  -- Retrieve the calendar view from the ledger
  usnyCalendarView <- submit reuters do exerciseCmd usnyCalendarCid GetView with viewer = reuters

  -- Define a new calendar locally
  let
    cal2 = HolidayCalendarData with
      id = "USNY"
      weekend = [Saturday, Sunday]
      holidays = [date 2018 Jan 02]

  -- Ensure that publicParty cannot update the calendar
  submitMustFail publicParty do
    exerciseCmd usnyCalendarCid UpdateCalendar with
      newCalendar = cal2

  -- Reuters updates the USNY calendar
  usnyCalendarCid2 <- submit reuters do
    exerciseCmd usnyCalendarCid UpdateCalendar with
      newCalendar = cal2

  -- Retrieve the updated calendar from the ledger
  usnyCalendarView2 <- submit reuters do exerciseCmd usnyCalendarCid2 GetView with viewer = reuters

  -- Verify that the updated calendar now has different holidays
  assertMsg "The calendars should now have different holidays"
    $ usnyCalendarView.calendar.holidays /= usnyCalendarView2.calendar.holidays

  -- Archive calendar (via factory)
  submit reuters do
    exerciseCmd calendarFactoryCid Factory.Remove with
      calendarCid = usnyCalendarCid2
      provider = reuters

  pure ()
