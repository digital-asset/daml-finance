-- Copyright (c) 2024 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Instrument.Equity.Factory where

import DA.Set (singleton)
import Daml.Finance.Instrument.Equity.Instrument (Instrument(..))
import Daml.Finance.Interface.Instrument.Base.Instrument qualified as Instrument (createReference)
import Daml.Finance.Interface.Instrument.Equity.Factory qualified as EquityFactory (Create(..), I, View(..))
import Daml.Finance.Interface.Types.Common.Types (PartiesMap)
import Daml.Finance.Interface.Util.Disclosure qualified as Disclosure (I, View(..), flattenObservers)
import Daml.Finance.Util.Disclosure (addObserversImpl, removeObserversImpl, setObserversImpl)

-- | Type synonym for `Factory`.
type T = Factory

-- | Factory template for instrument creation.
template Factory
  with
    provider : Party
      -- ^ The factory's provider.
    observers : PartiesMap
      -- ^ The factory's observers.
  where
    signatory provider
    observer Disclosure.flattenObservers observers

    interface instance EquityFactory.I for Factory where
      view = EquityFactory.View with provider
      create' EquityFactory.Create{instrument; description; validAsOf; observers} = do
        cid <- toInterfaceContractId <$>
          create Instrument with
            depository = instrument.depository
            issuer = instrument.issuer
            id = instrument.id
            version = instrument.version
            holdingStandard = instrument.holdingStandard
            description
            validAsOf
            observers
        Instrument.createReference instrument.depository $ toInterfaceContractId cid
        pure cid

    interface instance Disclosure.I for Factory where
      view = Disclosure.View with disclosureControllers = singleton provider; observers
      setObservers = setObserversImpl @Factory @Disclosure.I this None
      addObservers = addObserversImpl @Factory @Disclosure.I this None
      removeObservers = removeObserversImpl @Factory @Disclosure.I this None
