-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Settlement.RouteProvider.SingleCustodian where

import Daml.Finance.Interface.Settlement.RouteProvider qualified as RouteProvider (Discover(..), I, View(..))
import Daml.Finance.Interface.Settlement.Types (RoutedStep(..))
import Daml.Finance.Interface.Types.Common (Parties)

-- | Template which implements the `RouteProvider` interface.
--  It is used to transform each settlement `Step` into a `RoutedStep` using a single custodian.
template SingleCustodian
  with
    provider : Party
      -- ^ Party providing the facility.
    observers : Parties
      -- ^ Observers.
    custodian : Party
      -- ^ The custodian to be used to route each `Step`.
  where
    signatory provider
    observer observers

    interface instance RouteProvider.I for SingleCustodian where
      view = RouteProvider.View with provider; observers
      discover RouteProvider.Discover{discoverors; contextId; steps} =
        let
          routeStep step = RoutedStep with
            sender = step.sender; receiver = step.receiver; quantity = step.quantity; custodian
          routedSteps = map routeStep steps
        in
          pure routedSteps
