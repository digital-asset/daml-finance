-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Lifecycle.Event.Distribution where

import DA.Time (time)
import Daml.Finance.Interface.Asset.Instrument qualified as Instrument (K, Q)
import Daml.Finance.Interface.Common.Types (Observers)
import Daml.Finance.Interface.Common.Util (flattenObservers)
import Daml.Finance.Interface.Lifecycle.Event qualified as Event (HasImplementation, I, View(..))

type T = Event

instance Event.HasImplementation Event

-- | Distribution of units of an instrument for each unit of a target instrument (e.g., share or cash dividends).
template Event
  with
    provider : Party
      -- ^ Providers of the distribution event.
    id : Text
      -- ^ Textual identifier of the event.
    effectiveDate : Date
      -- ^ Date on which the distribution is effectuated.
    targetInstrument : Instrument.K
      -- ^ Instrument the distribution event applies to.
    newInstrument : Instrument.K
      -- ^ Instrument after the distribution has been claimed.
    perUnitDistribution : [Instrument.Q]
      -- ^ Distributed quantities per unit held.
    observers : Observers
      -- ^ Observers.
  where
    signatory provider
    observer flattenObservers observers

    ensure targetInstrument.depository == newInstrument.depository
      && targetInstrument.issuer == newInstrument.issuer
      && targetInstrument.id.label == newInstrument.id.label

    implements Event.I where
      view = Event.View with eventTime = time effectiveDate 0 0 0
