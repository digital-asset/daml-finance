-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Lifecycle.Event.Replacement where

import DA.Time (time)
import Daml.Finance.Interface.Instrument.Base.Instrument qualified as Instrument (K, Q)
import Daml.Finance.Interface.Lifecycle.Event qualified as Event (I, View(..))
import Daml.Finance.Interface.Lifecycle.Event.Replacement qualified as Replacement (HasImplementation, I, View(..))
import Daml.Finance.Interface.Types.Common (Id, Parties)

-- | Type synonym for `Event`.
type T = Event

instance Replacement.HasImplementation Event

-- | Event contract for the replacement of units of an instrument with a basket of other
-- instruments, e.g., a stock merger.
template Event
  with
    providers : Parties
      -- ^ Providers of the distribution event.
    id : Id
      -- ^ Event identifier.
    description : Text
      -- ^ Event description.
    effectiveDate : Date
      -- ^ Date on which the replacement is effectuated.
    targetInstrument : Instrument.K
      -- ^ Instrument the replacement event applies to.
    perUnitReplacement : [Instrument.Q]
      -- ^ Instrument quantities the target instrument is replaced with.
    observers : Parties
      -- ^ Observers.
  where
    signatory providers
    observer observers

    interface instance Event.I for Event where
      view = Event.View with providers; id; description; eventTime = time effectiveDate 0 0 0

    interface instance Replacement.I for Event where
      view = Replacement.View with effectiveDate; targetInstrument; perUnitReplacement
      asEvent = toInterface @Event.I this