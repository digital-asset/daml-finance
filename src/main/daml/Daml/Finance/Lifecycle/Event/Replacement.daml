-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Lifecycle.Event.Replacement where

import Daml.Finance.Interface.Lifecycle.Event qualified as Event (I, View(..))
import Daml.Finance.Interface.Lifecycle.Event.Replacement qualified as Replacement (HasImplementation, I, View(..))
import Daml.Finance.Interface.Types.Common.Types (Id, InstrumentKey, InstrumentQuantity, Parties)

-- | Type synonym for `Event`.
type T = Event

instance Replacement.HasImplementation Event

-- | Event contract for the replacement of units of an instrument with a basket of other
-- instruments, e.g., a stock merger.
template Event
  with
    providers : Parties
      -- ^ Providers of the distribution event.
    id : Id
      -- ^ Event identifier.
    description : Text
      -- ^ Event description.
    effectiveTime : Time
      -- ^ Time on which the replacement is effectuated.
    targetInstrument : InstrumentKey
      -- ^ Instrument the replacement event applies to.
    perUnitReplacement : [InstrumentQuantity]
      -- ^ Instrument quantities the target instrument is replaced with.
    observers : Parties
      -- ^ Observers.
  where
    signatory providers
    observer observers

    interface instance Event.I for Event where
      view = Event.View with providers; id; description; eventTime = effectiveTime

    interface instance Replacement.I for Event where
      view = Replacement.View with effectiveTime; targetInstrument; perUnitReplacement
      asEvent = toInterface @Event.I this