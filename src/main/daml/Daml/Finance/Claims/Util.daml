-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Claims.Util
  ( isZero
  , isZero'
  , toTime
  , toTime'
  ) where

import ContingentClaims.Core.Claim (Claim, mapParams)
import ContingentClaims.Lifecycle.Util qualified as CC (isZero)
import Daml.Finance.Interface.Claims.Claim qualified as Claim (I, GetClaims(..), getClaims)
import Daml.Finance.Interface.Claims.Types (TaggedClaim)
import Daml.Finance.Interface.Types.Date.Classes (HasUTCTimeConversion(..))

-- | Checks if all input claims are zero.
isZero : Party -> Claim.I -> Update Bool
isZero actor c = isZero' <$> Claim.getClaims c Claim.GetClaims with actor

-- | Checks if all input claims are zero.
isZero' : [TaggedClaim] -> Bool
isZero' = all $ CC.isZero . (.claim)

-- | Maps the time parameter in a `Claim` to `Time`. As `Time` is generally understood to express UTC time, we recommend mapping to UTC time.
toTime : HasUTCTimeConversion t => Claim t x a o -> Claim Time x a o
toTime = mapParams toUTCTime identity identity identity

-- | Maps the time parameter in a `Claim` to `Time`. As `Time` is generally understood to express UTC time, we recommend mapping to UTC time.
toTime' : (t -> Time) -> Claim t x a o -> Claim Time x a o
toTime' forwardMap c = mapParams forwardMap identity identity identity c
