-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Instrument.Bond.FixedRate.Instrument where

import Daml.Finance.Interface.Instrument.Base.Instrument qualified as BaseInstrument (I, Implementation, asDisclosure)
import Daml.Finance.Interface.Instrument.Bond.FixedRate.Types (FixedRate)
import Daml.Finance.Interface.Util.Disclosure qualified as Disclosure (I, Implementation)

-- | Type synonym for `Instrument`.
type I = Instrument

-- | Type synonym for `View`.
type V = View

-- | View of `Instrument`.
data View = View
  with
    fixedRate : FixedRate
      -- ^ Attributes of a fixed rate bond.
  deriving (Eq, Show)

-- | Instrument interface representing a fixed rate bond.
interface Instrument where
  viewtype V

  asBaseInstrument : BaseInstrument.I
    -- ^ Conversion to `Base Instrument` interface.

-- | Type constraint requiring templates to implement `Instrument` along with the `BaseInstrument`
--   and  `Disclosure` interfaces.
type Implementation t =
  (HasToInterface t Instrument, BaseInstrument.Implementation t, Disclosure.Implementation t)
instance HasToInterface Instrument BaseInstrument.I where _toInterface = asBaseInstrument
instance HasToInterface Instrument Disclosure.I where
  _toInterface = BaseInstrument.asDisclosure . asBaseInstrument
class (Implementation t) => HasImplementation t
instance HasImplementation Instrument
