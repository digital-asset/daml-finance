-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Instrument.Swap.Currency.Types where

import Daml.Finance.Interface.Instrument.Base.Instrument qualified as BaseInstrument (K)
import Daml.Finance.Interface.Types.Common (InstrumentKey)
import Daml.Finance.Interface.Types.Date.DayCount (DayCountConventionEnum)
import Daml.Finance.Interface.Types.Date.Schedule (PeriodicSchedule(..))

data CurrencySwap = CurrencySwap
  with
    instrument : InstrumentKey
      -- ^ The instrument's key.
    description : Text
      -- ^ The description of the swap.
    issuerPaysBase : Bool
      -- ^ Indicate whether the issuer of the instrument pays the base currency leg or the foreign currency leg of the swap.
    baseRate : Decimal
      -- ^ The interest rate of the base currency. For example, in case of "3% in USD" this should be 0.03.
    foreignRate : Decimal
      -- ^ The interest rate of the foreign currency. For example, in case of "2% in EUR" this should be 0.02.
    periodicSchedule : PeriodicSchedule
      -- ^ The schedule for the periodic swap payments.
    holidayCalendarIds : [Text]
      -- ^ The identifiers of the holiday calendars to be used for the swap payment schedule.
    calendarDataProvider : Party
      -- ^ The reference data provider to use for the holiday calendar.
    dayCountConvention : DayCountConventionEnum
      -- ^ The day count convention used to calculate day count fractions. For example: Act360.
    baseCurrency : BaseInstrument.K
      -- ^ The base currency of the swap. For example, in the case of USD this should be a USD cash instrument.
    foreignCurrency : BaseInstrument.K
      -- ^ The foreign currency of the swap. For example, in case of EUR this should be a EUR cash instrument.
    fxRate : Decimal
      -- ^ The fx rate used to convert from the base currency principal amount to the foreign currency principal amount.
    lastEventTimestamp : Time
      -- ^ (Market) time of the last recorded lifecycle event. If no event has occurred yet, the time of creation should be used.
  deriving (Eq, Show)
