-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Instrument.Swap.CreditDefault.Types where

import Daml.Finance.Interface.Instrument.Base.Instrument qualified as BaseInstrument (K)
import Daml.Finance.Interface.Types.Common.Types (InstrumentKey(..))
import Daml.Finance.Interface.Types.Date.DayCount (DayCountConventionEnum)
import Daml.Finance.Interface.Types.Date.Schedule (PeriodicSchedule(..))

-- | Describes the attributes of a Credit Default swap.
data CreditDefault = CreditDefault
  with
    instrument : InstrumentKey
      -- ^ The instrument's key.
    description : Text
      -- ^ The description of the swap.
    defaultProbabilityReferenceId : Text
      -- ^ The reference ID of the default probability observable. For example, in case of
      --   protection against a "TSLA bond payment default" this should be a valid reference to the
      --   "TSLA default probability".
    recoveryRateReferenceId : Text
      -- ^ The reference ID of the recovery rate observable. For example, in case of a "TSLA bond
      --   payment default with a 60% recovery rate" this should be a valid reference to the "TSLA
      --   bond recovery rate".
    ownerReceivesFix : Bool
      -- ^ Indicate whether a holding owner of this instrument receives the fix or the default
      --   protection leg of the swap.
    fixRate : Decimal
      -- ^ The interest rate of the fix leg. For example, in case of "2.5% fix" this should be
      --   0.025.
    periodicSchedule : PeriodicSchedule
      -- ^ The schedule for the periodic swap payments.
    holidayCalendarIds : [Text]
      -- ^ The identifiers of the holiday calendars to be used for the swap payment schedule.
    calendarDataProvider : Party
      -- ^ The reference data provider to use for the holiday calendar.
    dayCountConvention : DayCountConventionEnum
      -- ^ The day count convention used to calculate day count fractions. For example: Act360.
    currency : BaseInstrument.K
      -- ^ The currency of the swap. For example, if the swap pays in USD this should be a USD cash
      --   instrument.
    lastEventTimestamp : Time
      -- ^ (Market) time of the last recorded lifecycle event. If no event has occurred yet, the
      --   time of creation should be used.
  deriving (Eq, Show)
