-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Settlement.Settleable where

import Daml.Finance.Interface.Asset.Transferable qualified as Transferable (I)
import Daml.Finance.Interface.Settlement.Types (Step)

type I = Settleable
type V = View

-- | View for `Settleable`.
data View = View
  with
    settler : Party
      -- ^ Party triggering the settlement.
    steps : [Step]
      -- ^ Settlement steps.
  deriving (Eq, Show)

-- | An interface for atomically settling `Transferable`\s.
interface Settleable where
  view : View
    -- ^ Acquire the default interface view.
  settleImpl : Update [ContractId Transferable.I]
    -- ^ Implementation of the `Settle` choice.

  nonconsuming choice GetView : View
    -- ^ Retrieves the instrument view.
    with
      viewer : Party
        -- ^ The party retrieving the view.
    controller viewer
    do
      pure $ view this

  choice Settle : [ContractId Transferable.I]
    -- ^ Execute settlement.
    controller (view this).settler
    do
      settleImpl this

-- | Type constraint used to require templates implementing `Settleable` to not
-- require any other interface to be implemented.
type Implementation t = HasToInterface t I
class (Implementation t) => HasImplementation t
instance HasImplementation I
