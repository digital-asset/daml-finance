-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Settlement.Batch where

import Daml.Finance.Interface.Holding.Base qualified as Holding (I)
import Daml.Finance.Interface.Settlement.Types (BatchKey(..), RoutedStep)
import Daml.Finance.Interface.Types.Common.Types (Id, Parties)
import Daml.Finance.Interface.Util.KeyTable (KeyTable, HasSyntheticKey(..), getKey)
import Daml.Finance.Interface.Util.KeyTable qualified as SyntheticallyKeyed (I)

-- | Type synonym for `Batch`.
type I = Batch

-- | Type synonym for `View`.
type V = View

-- | View for `Batch`.
data View = View
  with
    requestors : Parties
      -- ^ Parties requesting the settlement.
    settlers : Parties
      -- ^ Parties that can trigger the final settlement.
    id : Id
      -- ^ Batch identifier.
    description : Text
      -- ^ Batch description.
    contextId : Optional Id
      -- ^ Identifier to link a batch to a context (e.g. the `Effect` it originated from).
    routedSteps : [RoutedStep]
      -- ^ Routed settlement steps.
    settlementTime : Optional Time
      -- ^ Settlement time (if any).
  deriving (Eq, Show)

-- | An interface for atomically settling a batch of `Instruction`\s.
-- The corresponding Instructions are referenced by key.
interface Batch requires SyntheticallyKeyed.I where
  viewtype V

  getKey : BatchKey
    -- ^ Get the key for the `Batch`.
  settle : Settle -> Update ([ContractId Holding.I], KeyTable)
    -- ^ Implementation of the `Settle` choice.
  cancel : Cancel -> Update ([ContractId Holding.I], KeyTable)
    -- ^ Implementation of the `Cancel` choice.

  nonconsuming choice GetView : View
    -- ^ Retrieves the interface view.
    with
      viewer : Party
        -- ^ The party retrieving the view.
    controller viewer
    do
      pure $ view this

  choice Settle : ([ContractId Holding.I], KeyTable)
    -- ^ Settles the batch.
    with
      actors : Parties
        -- ^ The parties settling the batch.
      keyTable : KeyTable
        -- ^ The key table needed for the action.
    controller actors
    do
      settle this arg

  choice Cancel : ([ContractId Holding.I], KeyTable)
    -- ^ Cancels the batch.
    with
      actors : Parties
        -- ^ The parties canceling the batch.
      keyTable : KeyTable
        -- ^ The key table needed for the action.
    controller actors
    do
      cancel this arg

-- | Convert the account's 'View' to its key.
toKey : V -> BatchKey
toKey v = BatchKey with requestors = v.requestors; id = v.id

-- | HIDE
instance HasSyntheticKey I BatchKey where
  getKey = Daml.Finance.Interface.Settlement.Batch.getKey
  getKeyFromCid viewer cid = toKey <$> exercise cid GetView with viewer
