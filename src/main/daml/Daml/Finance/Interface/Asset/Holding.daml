-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Asset.Holding where

import Daml.Finance.Interface.Common.Disclosure qualified as Disclosure (I, Implementation)
import Daml.Finance.Interface.Common.Types (AccountKey, InstrumentKey)

-- | Type synonym for `Holding`.
type I = Holding

-- | Type synonym for `View`.
type V = View

-- | View for `Holding`.
data View = View
  with
    instrument : InstrumentKey
      -- ^ Instrument being held.
    account : AccountKey
      -- ^ Key of the account holding the assets.
    amount : Decimal
      -- ^ Size of the holding.
  deriving (Eq, Ord, Show)

-- | Base interface for a holding.
interface Holding where
  viewtype View

  asDisclosure : Disclosure.I
    -- ^ Conversion to `Disclosure` interface.

  nonconsuming choice GetView : View
    -- ^ Retrieve the holding view.
    with
      viewer : Party
       -- ^ The party retrieving the view.
    controller viewer
    do
      pure $ _view this

-- | Type constraint used to require templates implementing `Holding` to also
-- implement `Disclosure`.
type Implementation t = (HasToInterface t I, Disclosure.Implementation t)
instance HasToInterface I Disclosure.I where _toInterface = asDisclosure
class (Implementation t) => HasImplementation t
instance HasImplementation I
