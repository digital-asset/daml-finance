-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Data.Reference.HolidayCalendar where

import Daml.Finance.Interface.Types.Date.Calendar (HolidayCalendarData)
import Daml.Finance.Interface.Util.Disclosure qualified as Disclosure (I)
import Daml.Finance.Interface.Util.KeyTable (HasSyntheticKey(..))
import Daml.Finance.Interface.Util.KeyTable qualified as SyntheticallyKeyed (I)

-- | Type synonym for `HolidayCalendar`.
type I = HolidayCalendar

-- | Type synonym for `View`.
type V = View

-- | View for `HolidayCalendar`.
data View = View
  with
    provider : Party
      -- ^ The parties providing the `HolidayCalendar`.
    calendar : HolidayCalendarData
      -- ^ Holiday Calendar Data used to define holidays.

-- | Interface for contracts storing holiday calendar data on the ledger.
interface HolidayCalendar requires Disclosure.I, SyntheticallyKeyed.I where
  viewtype V

  getKey : HolidayCalendarKey
    -- ^ Get the key of the `HolidayCalendar`.
  updateCalendar : UpdateCalendar -> Update (ContractId HolidayCalendar)
      -- ^ Updates the holiday calendar.

  nonconsuming choice GetView : View
    -- ^ Retrieves the interface view.
    with
      viewer : Party
        -- ^ The party fetching the view.
    controller viewer
    do
      pure $ view this

  choice UpdateCalendar : ContractId HolidayCalendar
    -- ^ Updates the holiday calendar.
    with
      newCalendar : HolidayCalendarData
        -- ^ The new `HolidayCalendarData`.
    controller (view this).provider
    do
      updateCalendar this arg

-- | Key used to look up the holiday calendar of an entity, as defined by a reference data provider.
data HolidayCalendarKey = HolidayCalendarKey
  with
    provider : Party
      -- ^ The party maintaining the `HolidayCalendar`.
    id : Text
      -- ^ A textual label identifying the calendar (e.g. "NYSE" for the New York Stock Exchange
      --   holiday calendar).
  deriving (Eq, Ord, Show)

-- | Convert the account's 'View' to its key.
toKey : View -> HolidayCalendarKey
toKey v = HolidayCalendarKey with provider = v.provider; id = v.calendar.id

-- | HIDE
instance HasSyntheticKey I HolidayCalendarKey where
  getKey = Daml.Finance.Interface.Data.Reference.HolidayCalendar.getKey
  getKeyFromCid viewer cid = toKey <$> exercise cid GetView with viewer
