-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- | This module defines an interface for a `TimeObservable`, which is implemented by templates
-- exposing time information.
module Daml.Finance.Interface.Data.TimeObservable where

import Daml.Finance.Interface.Types.Common.Types (Id, Parties)
import Prelude hiding (getTime)

-- | Type synonym for `TimeObservable`.
type I = TimeObservable

-- | Type synonym for `View`.
type V = View

-- | View for `TimeObservable`.
data View = View
  with
    providers : Parties
      -- ^ Parties providing the observation.
    id : Id
      -- ^ Textual reference to the observable.
  deriving (Eq, Show)

-- | An interface to inspect a time value.
interface TimeObservable where
  viewtype V

  getTime : Update Time
    -- ^ Implementation of the `GetTime` choice.

  nonconsuming choice GetView : View
    -- ^ Retrieves the interface view.
    with
      viewer : Party
        -- ^ The party retrieving the view.
    controller viewer
    do
      pure $ view this

  nonconsuming choice GetTime : Time
    -- ^ Retrieves the current time.
    with
      actors : Parties
        -- ^ The party retrieving the view.
    controller actors
    do
      getTime this

-- | Type constraint for requiring interface implementations for `TimeObservable`.
type Implementation t = HasToInterface t I
class (Implementation t) => HasImplementation t
instance HasImplementation I
