-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Data.Numeric.Observation.Factory where

import DA.Map (Map)
import Daml.Finance.Interface.Data.Numeric.Observation qualified as Observation (I)
import Daml.Finance.Interface.Types.Common.Types (Id, Parties, PartiesMap)
import Daml.Finance.Interface.Util.Disclosure qualified as Disclosure (I)

-- | Type synonym for `Factory`.
type F = Factory

-- | Type synonym for `View`.
type V = View

-- View of `Factory`.
data View = View
  with
    provider : Party
      -- ^ The provider of the `Factory`.
    observers : PartiesMap
      -- ^ The observers of the `Factory`.
  deriving (Eq, Show)

-- | Factory contract used to create, remove and view a `Numeric.Observation`.
interface Factory requires Disclosure.I where
  viewtype V

  create' : Create -> Update (ContractId Observation.I)
    -- ^ Implementation of `Create` choice.
  remove : Remove -> Update ()
    -- ^ Implementation of `Remove` choice.

  nonconsuming choice Create : ContractId Observation.I
    -- ^ Create an `Observation`.
    with
      provider : Party
        -- ^ The reference data provider.
      id : Id
        -- ^ A textual identifier.
      observations : Map Time Decimal
        -- ^ The time-dependent values.
      observers : PartiesMap
        -- ^ Observers.
    controller provider
      do
        create' this arg

  nonconsuming choice Remove : ()
    -- ^ Archive an `Observation`.
    with
      actors : Parties
        -- ^ The parties authorizing the removal.
      observationCid : ContractId Observation.I
        -- ^ The observation to be removed.
    controller actors
      do
        remove this arg
