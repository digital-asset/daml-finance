-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- | This module defines an interface for a `TimeObservable`, which is implemented by templates
-- exposing time information.
module Daml.Finance.Interface.Lifecycle.Observable.TimeObservable where

import Daml.Finance.Interface.Types.Common.Types (Id, Parties, TimeObservableKey(..))
import Daml.Finance.Interface.Util.SyntheticKey (HasSyntheticKey(..))
import Daml.Finance.Interface.Util.SyntheticKey qualified as SyntheticKey (I)
import Prelude hiding (getTime)

-- | Type synonym for `TimeObservable`.
type I = TimeObservable

-- | Type synonym for `View`.
type V = View

-- | View for `TimeObservable`.
data View = View
  with
    providers : Parties
      -- ^ Parties providing the observation.
    id : Id
      -- ^ Textual reference to the observable.
  deriving (Eq, Show)

-- | An interface to inspect a time value.
interface TimeObservable requires SyntheticKey.I where
  viewtype V

  getKey : TimeObservableKey
    -- ^ Get the key of the `TimeObservable`.
  getTime : Update Time
    -- ^ Implementation of the `GetTime` choice.

  nonconsuming choice GetView : View
    -- ^ Retrieves the interface view.
    with
      viewer : Party
        -- ^ The party retrieving the view.
    controller viewer
    do
      pure $ view this

  nonconsuming choice GetTime : Time
    -- ^ Retrieves the current time.
    with
      actors : Parties
        -- ^ The party retrieving the current time.
    controller actors
    do
      getTime this

-- | Convert the account's 'View' to its key.
toKey : View -> TimeObservableKey
toKey v = TimeObservableKey with providers = v.providers; id = v.id

-- | HIDE
instance HasSyntheticKey I TimeObservableKey where
  getKey = Daml.Finance.Interface.Lifecycle.Observable.TimeObservable.getKey
  getKeyFromCid viewer cid = toKey <$> exercise cid GetView with viewer
