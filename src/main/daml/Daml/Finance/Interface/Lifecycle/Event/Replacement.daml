-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Lifecycle.Event.Replacement where

import Daml.Finance.Interface.Lifecycle.Event qualified as Base (I, Implementation)
import Daml.Finance.Interface.Types.Common.Types (InstrumentKey, InstrumentQuantity)

-- | Type synonym for `Event`.
type I = Event

-- | Type synonym for `View`.
type V = View

-- | View for `Event`.
data View = View
  with
    effectiveTime : Time
      -- ^ Time on which the replacement is effectuated.
    targetInstrument : InstrumentKey
      -- ^ Instrument the replacement event applies to.
    perUnitReplacement : [InstrumentQuantity]
      -- ^ Instrument quantities the target instrument is replaced with.
  deriving (Eq, Show)

-- | Event interface for the replacement of units of an instrument with a basket of other
-- instruments (e.g. stock merger).
interface Event where
  viewtype V
  asEvent : Base.I
    -- ^ Conversion to base `Event` interface.

  nonconsuming choice GetView : View
    -- ^ Retrieves the event view.
    with
      viewer : Party
        -- ^ The party retrieving the view.
    controller viewer
    do
      pure $ view this

-- | Type constraint for requiring templates to implement `Event`.
type Implementation t = (HasToInterface t Event, Base.Implementation t)
class (Implementation t) => HasImplementation t
instance HasImplementation Event
instance HasToInterface I Base.I where _toInterface = asEvent
