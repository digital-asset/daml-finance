-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Lifecycle.Clock where

import Daml.Finance.Interface.Common.Classes (HasUTCTimeConversion(..))

-- | Type synonym for `Clock`.
type I = Clock

-- | Type synonym for `View`.
type V = View

-- | View for `Clock`.
data View = View
  with
    clockTime : Time
      -- ^ The clock's time expressed in UTC time.
  deriving (Eq, Ord, Show)

-- | A clock is a subdivision of the Time continuum into a countable set. For each element of this set, we can calculate the corresponding UTC time.
interface Clock where
  viewtype V

  nonconsuming choice GetView : View
    -- ^ Retrieves the instrument view.
    with
      viewer : Party
        -- ^ The party retrieving the view.
    controller viewer
    do
      pure $ _view this

-- | Type constraint for requiring interface implementations for `Clock`.
type Implementation t = HasToInterface t I
class (Implementation t) => HasImplementation t
instance HasImplementation I

instance HasUTCTimeConversion Clock where
  toUTCTime c = (_view c).clockTime

instance Ord Clock where
  x <= y = toUTCTime x <= toUTCTime y
