-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Lifecycle.Rule.Claim where

import Daml.Finance.Interface.Holding.Base qualified as Base (I)
import Daml.Finance.Interface.Lifecycle.Effect qualified as Effect (I)
import Daml.Finance.Interface.Settlement.Batch qualified as Batch (I)
import Daml.Finance.Interface.Settlement.Instruction qualified as Instruction (I)

-- | Type synonym for `Claim`.
type I = Claim

-- | Type synonym for `View`.
type V = View

-- | View for `Settlement`.
data View = View {} deriving (Eq, Ord, Show)

-- | Data type wrapping the results of `Claim`ing an `Effect`.
data ClaimResult = ClaimResult
  with
    newInstrumentHoldingCids : Optional [ContractId Base.I]
      -- ^ The holdings on the instrument produced by the effect, when it exists.
    batchCid : ContractId Batch.I
      -- ^ Batch used to batch-settle settlement instructions.
    instructionCids : [ContractId Instruction.I]
      -- ^ Settlement instructions to settle all effect consequences other than consuming / upgrading the target instrument.
  deriving (Eq, Show)

-- | Interface for contracts that allow holders to claim an `Effect` and generate `SettlementInstruction`\s.
interface Claim where
  viewtype V

  claimEffect : ClaimEffect -> Update ClaimResult
    -- ^ Implementation of the `ClaimEffect` choice.

  nonconsuming choice GetView : View
    -- ^ Retrieves the interface view.
    with
      viewer : Party
        -- ^ The party retrieving the view.
    controller viewer
    do
      pure $ view this

  nonconsuming choice ClaimEffect : ClaimResult
    -- ^ Claim an effect and generate corresponding settlement instructions.
    with
      claimer : Party
        -- ^ The party claiming the effect.
      holdingCids : [ContractId Base.I]
        -- ^ The positions to process as part of the claim.
      effectCid : ContractId Effect.I
        -- ^ The effect to settle.
    controller claimer
    do
      claimEffect this arg

-- | Type constraint for requiring templates to implement `Settlement`.
type Implementation t = (HasToInterface t I)
class (Implementation t) => HasImplementation t
instance HasImplementation I