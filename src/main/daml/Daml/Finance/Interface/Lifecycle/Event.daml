-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Lifecycle.Event where

type I = Event
type V = View

-- | View for `Event`.
data View = View
  with
    eventTime : Time
      -- ^ The time of the event. This allows ordering of events.
  deriving (Eq, Ord, Show)

-- | A lifecycle event. These events are ordered based on the corresponding event time.
interface Event where
  viewtype View
    -- ^ Default interface view.

  nonconsuming choice GetView : View
    -- ^ Retrieves the instrument view.
    with
      viewer : Party
        -- ^ The party retrieving the view.
    controller viewer
    do
      pure $ _view this

-- | Type constraint used to require templates implementing `Event` to not
-- require any other interface to be implemented.
type Implementation t = HasToInterface t I
class (Implementation t) => HasImplementation t
instance HasImplementation I

instance Ord Event where
  x <= y = getEventTime x <= getEventTime y

-- | Given an event, retrieves the event time.
getEventTime : Event -> Time
getEventTime e = (_view e).eventTime
