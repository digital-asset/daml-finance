-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

{-# LANGUAGE AllowAmbiguousTypes #-}

module Daml.Finance.Interface.Util.Common
  ( exerciseInterfaceByKeyHelper
  , fetchInterfaceByKey
  , verify
  ) where

-- | Verify is assertMsg with its arguments flipped.
verify : CanAssert m => Bool -> Text -> m ()
verify = flip assertMsg

-- | Fetch an interface by key.
fetchInterfaceByKey : forall t i2 k i.
  (HasInterfaceTypeRep i, HasInterfaceTypeRep i2, HasFetchByKey t k,
   HasField "cid" t (ContractId i), HasFetch i2) => k -> Update i2
fetchInterfaceByKey k = do
  d <- snd <$> fetchByKey @t k
  fetch $ coerceInterfaceContractId d.cid

-- | HIDE
-- Utility function for exercising interface by key.
exerciseInterfaceByKeyHelper : forall t i1 i2 k c d r.
  (HasInterfaceTypeRep i1, HasInterfaceTypeRep i2, HasExerciseByKey t k c (ContractId i1), HasExercise i2 d r)
  => k -> c -> d -> Update r
exerciseInterfaceByKeyHelper k arg1 arg2 = do
  cid : ContractId i1 <- exerciseByKey @t k arg1
  let cid' : ContractId i2 = coerceInterfaceContractId cid
  exercise cid' arg2
