-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

{-# LANGUAGE AllowAmbiguousTypes #-}

module Daml.Finance.Interface.Util.Common where

import DA.Optional (isSome)
import Daml.Finance.Interface.Types.Common.Types (InstrumentKey, InstrumentQuantity, Quantity(..))

-- | Checks if an interface instance can be converted to another interface/template.
isInstanceOf : forall i2 i1. (HasFromInterface i2 i1, HasFetch i1) => ContractId i1 -> Update Bool
isInstanceOf cid = isSome <$> fetchFromInterface @i2 cid

-- | Verify is assertMsg with its arguments flipped.
verify : CanAssert m => Bool -> Text -> m ()
verify = flip assertMsg

-- | Wraps an amount and an instrument key into an instrument quantity.
qty : Decimal -> InstrumentKey -> InstrumentQuantity
qty amount instrument = Quantity with unit = instrument; amount

-- | Scale `quantity` by the provided factor.
scale : Decimal -> InstrumentQuantity -> InstrumentQuantity
scale factor quantity = quantity with amount = quantity.amount * factor
