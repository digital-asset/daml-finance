-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Types.Common.Types where

import DA.Map (Map)
import DA.Set (Set)

-- | A set of parties.
type Parties = Set Party

-- | Parties mapped by a specific key (or context).
-- The textual key is the "context" which describes the value set of parties.
-- This allows processes to add/remove parties for their specific purpose, without affecting others.
type PartiesMap = Map Text Parties

-- A textual identifier.
newtype Id = Id Text
  deriving (Eq, Ord)

instance Show Id where
  show (Id t) = t

-- | The `HoldingStandard` data type classifies holdings based on the interfaces they implement in
-- the holding hierarchy:
--
-- +----------------+  +----------------+
-- | Transferable.I |  | Fungible.I     |
-- +----------------+  +----------------+
--              |          |
--     requires |          | requires
--              v          v
--           +----------------+
--           | Holding.I      |
--           +----------------+
--
data HoldingStandard
  = TransferableFungible
    -- ^ Represents the class of holdings which implement Fungible.I and Transferable.I, and by
    --   extension Holding.I.
  | Transferable
    -- ^ Represents the class of holdings which implement Transferable.I and, by extension,
    --   Holding.I, but not Fungible.I.
  | Fungible
    -- ^ Represents the class of holdings which implement Fungible.I and, by extension,
    --   Holding.I, but not Transferable.I.
  | BaseHolding
    -- ^ Represents the class of holdings which implement only Holding.I and neither Transferable.I
    --   nor Fungible.I.
  deriving (Eq, Ord, Show)

-- | A unique key for a holding factory.
data HoldingFactoryKey = HoldingFactoryKey
  with
    provider : Party
      -- ^ Holding factory provider.
    id : Id
      -- ^ Unique identifier for a holding factory.
  deriving (Eq, Ord, Show)

-- | A unique key for Accounts.
data AccountKey = AccountKey
  with
    custodian : Party
      -- ^ Account provider.
    owner : Party
      -- ^ Account owner.
    id : Id
      -- ^ Unique identifier for an account.
  deriving (Eq, Ord, Show)

-- | A unique key for Instruments.
data InstrumentKey = InstrumentKey
  with
    depository : Party
      -- ^ Party providing depository services.
    issuer : Party
      -- ^ Issuer of instrument.
    id : Id
      -- ^ A unique identifier for an instrument.
    version : Text
      -- ^ A textual instrument version.
    holdingStandard: HoldingStandard
      -- ^ The used holding standard for the instrument.
  deriving (Eq, Ord, Show)

-- | A dimensioned quantity.
data Quantity u a = Quantity
  with
    unit : u
      -- ^ The quantity's unit.
    amount : a
      -- ^ A numerical amount.
  deriving (Eq, Ord, Show)

type InstrumentQuantity = Quantity InstrumentKey Decimal
