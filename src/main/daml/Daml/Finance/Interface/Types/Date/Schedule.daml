-- Copyright (c) 2023 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.Interface.Types.Date.Schedule where

import Daml.Finance.Interface.Types.Date.Calendar
import Daml.Finance.Interface.Types.Date.RollConvention

-- | An enum type to specify a stub.
data StubPeriodTypeEnum
  = LongFinal
  -- ^ A long (more than one period) final stub.
  | LongInitial
  -- ^ A long (more than one period) initial stub.
  | ShortFinal
  -- ^ A short (less than one period) final stub.
  | ShortInitial
  -- ^ A short (less than one period) initial stub.
  deriving (Eq, Show)

-- | Frequency of a periodic schedule.
data Frequency = Frequency
  with
    period : PeriodEnum
      -- ^ The period, e.g., day, month, etc.
    periodMultiplier : Int
      -- ^ The period multiplier.
    rollConvention : RollConventionEnum
      -- ^ The roll convention.
  deriving (Eq, Show)

-- | A periodic schedule.
data PeriodicSchedule = PeriodicSchedule
  with
    effectiveDate : Date
      -- ^ Effective date, i.e., the (unadjusted) start date of the first period.
    terminationDate : Date
      -- ^ Termination date, i.e., the (unadjusted) end date of the last period.
    firstRegularPeriodStartDate : Optional Date
      -- ^ The (unadjusted) start date of the first regular period (optional).
    lastRegularPeriodEndDate : Optional Date
      -- ^ The (unadjusted) end date of the last regular period (optional).
    frequency : Frequency
      -- ^ The frequency of the periodic schedule.
    businessDayAdjustment : BusinessDayAdjustment
      -- ^ The business day adjustment to determine adjusted dates.
    effectiveDateBusinessDayAdjustment : Optional BusinessDayAdjustment
      -- ^ The (optional) business day adjustment of the effective date
    terminationDateBusinessDayAdjustment : Optional BusinessDayAdjustment
      -- ^ The (optional) business day adjustment of the termination date
    stubPeriodType : Optional StubPeriodTypeEnum
      -- ^ An optional stub to define a stub implicitly and not via `firstRegularPeriodStartDate` or
      --   `lastRegularPeriodEndDate`.
  deriving (Eq, Show)

-- | A single period in a schedule.
data SchedulePeriod = SchedulePeriod
  with
    adjustedEndDate : Date
      -- ^ Adjusted end date.
    adjustedStartDate : Date
      -- ^ Adjusted start date.
    unadjustedEndDate : Date
      -- ^ Unadjusted end date.
    unadjustedStartDate : Date
      -- ^ Unadjusted start date.
    stubType : Optional StubPeriodTypeEnum
      -- ^ Indicates whether this period is a stub (and if so, what type of stub it is)
  deriving (Eq, Show)

-- | A schedule defined by a list of periods.
type Schedule = [SchedulePeriod]
